version: "3.9"

name: aero-kit-check-dev

services:
  db:
    image: postgres:15-alpine
    container_name: akc_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: akc
      POSTGRES_PASSWORD: akc
      POSTGRES_DB: akc
    ports:
      - "5432:5432"         # expose for local psql / IDE
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      # Wait until DB is ready before starting backend/migrations
      test: ["CMD-SHELL", "pg_isready -U akc -d akc"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: akc_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Backend config
      HOST: 0.0.0.0
      PORT: 8000
      # IMPORTANT: asyncpg URL uses service name "db"
      DATABASE_URL: postgresql+asyncpg://akc:akc@db:5432/akc
      # Security (dev placeholder â€” replace in prod)
      JWT_SECRET: dev-secret-please-change
      # CORS: set explicit list or "*" for dev
      CORS_ORIGINS: '["*"]'
      # Optional ML endpoint (we have a local stub in code)
      # ML_ENDPOINT: http://ml:9000/infer
    ports:
      - "8000:8000"
    # For hot-reload in dev, uncomment the volumes block below
    # volumes:
    #   - ./:/app
    command: >
      sh -c "
        uvicorn src.app:app --host 0.0.0.0 --port 8000
      "
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 15s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:8000
    container_name: akc_frontend
    depends_on:
      - backend
    ports:
      - "8080:80"

  # Optional one-shot migration runner
  migrate:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: akc_migrate
    profiles: ["migrate"]    # run with: docker compose --profile migrate up migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://akc:akc@db:5432/akc
    command: alembic upgrade head
    # No ports or healthcheck; exits after applying migrations

volumes:
  pgdata:
    driver: local